; PlatformIO Project Configuration File
;
;   Build options: build flags, source filter
;   Upload options: custom upload port, speed and extra flags
;   Library options: dependencies, extra library storages
;   Advanced options: extra scripting
;
; Please visit documentation for the other options and examples
; http://docs.platformio.org/page/projectconf.html

[platformio]
name = esp32_oscilloscope
default_envs = esp32_release


; Shared options
[env]
extra_scripts = 
    scripts/run_lvgl_kconfig.py
check_tool = cppcheck
check_flags = 
	--enable=all
	--std=c11
	--language=c
lib_archive = false
  

[espressif]
esp_build_flags =
  -Wall
  -I include/esp32
  -DLV_LVGL_H_INCLUDE_SIMPLE
  -DLV_CONF_INCLUDE_SIMPLE
  -DLV_CONF_PATH=lv_conf.h
  ; Add recursive dirs for hal headers search
  !python -c "import os; print(' '.join(['-I {}'.format(i[0].replace('\x5C','/')) for i in os.walk('hal/esp32')]))"
esp_src_dirs = 
  +<*>
  +<../hal/esp32>
esp_monitor_filters = 
  direct
  esp32_exception_decoder
esp_ignore_test_dirs = 
  desktop/*
esp_lib_deps =
  lvgl/lvgl@^8.3.9
esp_monitor_speed = 115200

[native]
native_sdl_libs =
  lvgl/lvgl@^8.3.9
  lvgl/lv_drivers@~8.3.0
native_src =
  +<*>
  +<../hal/sdl2>
native_sdl_build_flags =
  ${env.build_flags}
  -D LV_CONF_SKIP
  -D LV_CONF_INCLUDE_SIMPLE
  ;-D LV_LOG_LEVEL=LV_LOG_LEVEL_INFO
  -D LV_LOG_PRINTF=1
  ; Add recursive dirs for hal headers search
  !python -c "import os; print(' '.join(['-I {}'.format(i[0].replace('\x5C','/')) for i in os.walk('hal/sdl2')]))"
  -lSDL2
  ; SDL drivers options
  -D LV_LVGL_H_INCLUDE_SIMPLE
  -D LV_DRV_NO_CONF
  -D USE_SDL
  -D SDL_HOR_RES=320
  -D SDL_VER_RES=240
  -D SDL_ZOOM=3
  -D SDL_INCLUDE_PATH="\"SDL2\SDL.h\""
  -I C:\Users\User\Downloads\SDL2\SDL2-2.28.2\x86_64-w64-mingw32\include
  -L C:\Users\User\Downloads\SDL2\SDL2-2.28.2\x86_64-w64-mingw32\lib
  -D LV_MEM_CUSTOM=1
  -D CONFIG_LV_FONT_MONTSERRAT_30=1
  -D LV_MEM_SIZE="(128U * 1024U)"
native_ignore_test_dirs = embedded/*

[env:native_sdl]
platform = native
extra_scripts = scripts/sdl2_build_extra.py
build_flags = ${native.native_sdl_build_flags}
lib_deps = ${native.native_sdl_libs}
build_src_filter = ${native.native_src}
test_framework = unity
test_ignore = ${native.native_ignore_test_dirs}


[env:native_test]
build_type = test
platform = native
test_framework = unity
test_ignore = 
  ${native.native_ignore_test_dirs}
  desktop/test_lvgl

[env:esp32_release]
build_type = release
platform = espressif32
framework = espidf
board = esp-wrover-kit
build_flags = ${espressif.esp_build_flags}
lib_deps = ${espressif.esp_lib_deps}
build_src_filter = ${espressif.esp_src_dirs}
monitor_speed = ${espressif.esp_monitor_speed}
monitor_filters = ${espressif.esp_monitor_filters}
custom_lvgl_kconfig_save_settings = include/esp32/lv_conf.config
custom_lvgl_kconfig_output_header = include/esp32/lv_conf.h


[env:esp32_debug]
build_type = debug
platform = espressif32
framework = espidf
board = esp-wrover-kit
upload_protocol = ftdi
debug_tool = ftdi
build_flags = ${espressif.esp_build_flags}
lib_deps = ${espressif.esp_lib_deps}
build_src_filter = ${espressif.esp_src_dirs}
monitor_speed = ${espressif.esp_monitor_speed}
monitor_filters = ${espressif.esp_monitor_filters}
custom_lvgl_kconfig_save_settings = include/esp32/lv_conf.config
custom_lvgl_kconfig_output_header = include/esp32/lv_conf.h

[env:esp32_test]
build_type = test
platform = espressif32
framework = espidf
board = esp-wrover-kit
build_flags = ${espressif.esp_build_flags}
lib_deps = ${espressif.esp_lib_deps}
build_src_filter = ${espressif.esp_src_dirs}
monitor_speed = ${espressif.esp_monitor_speed}
monitor_filters = ${espressif.esp_monitor_filters}
custom_lvgl_kconfig_save_settings = include/esp32/lv_conf.config
custom_lvgl_kconfig_output_header = include/esp32/lv_conf.h
test_framework = unity
test_ignore = ${espressif.esp_ignore_test_dirs}
test_port = COM16